create env => python3 -m venv venv
activate env in root where env and employeeApp ares => source venv/bin/activate
install DRF => pip3 install djangorestframework markdown django-filter
create project =>  django-admin startproject employeeApp
run project => python manage.py runserver
add in setting.py in installed_app =>     'rest_framework',  # make Sure to add this line
run migration =>  python3 manage.py migrate
create employeeCrud app => python3 manage.py startapp employeeCrud
add employeeApp in settings too config => 'employeeCrud'

information {
    After creating just execute these two commands where the first command creates a migration file in our app and the next one makes the changes in the database.

$ python3 manage.py makemigrations
$ python3 manage.py migrate
}



create employee => http://127.0.0.1:8000/employee/api/create
get employee list => http://127.0.0.1:8000/employee/api
update employee => http://127.0.0.1:8000/employee/api/{id}
delete employee by id => http://127.0.0.1:8000/employee/api/{id}/delete


// setup psql db 

run to install postgress in macos => brew install postgresql
start service psql =>  brew services start postgresql
create user after this name ask for username enetr then y => createuser --interactive 
create your new db => createdb your_database_name
connect with your db using => psql -d your_database_name

now #your_database_name shown in terminal
to check all users in your_database_name => \du
to check alll db in your your_database_name => \l
delete specific db => DROP DATABASE your_database_name; or DROP DATABASE "your_database_name";
for terminate the psql #psql terminal using => \q
set my new user with my new db as owner of db =>ALTER DATABASE your_database_name OWNER TO your_user_name;
grant PRIVILEGES => GRANT ALL PRIVILEGES ON DATABASE your_database_name TO your_user_name;
connect user and db => GRANT CONNECT ON DATABASE your_database_name TO your_user_name;
update user password that you create your_user_name => ALTER ROLE your_user_name WITH PASSWORD 'your_password';
for this project my db is employee_app and user named as superuser with all PRIVILEGES and pas is 123
 

after creating db it need to connect with your project 
need to install package on root after activate venv and then run after this go into your_project  like cd your_project=> {pip install psycopg2} and also install {pip install psycopg2-binary}
cd your_project and config psql in project => 
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql',
                'NAME': 'your_database_name',
                'USER': 'your_database_user',
                'PASSWORD': 'your_database_password',
                'HOST': 'localhost',  # Or the host where PostgreSQL is running
                'PORT': '5432',  # Default PostgreSQL port
            }
        }



after all step need to migrate =>  python manage.py migrate
Dump the existing data from your SQLite database into a JSON file: => python manage.py dumpdata > db.json
Now, load the data from the db.json file into your new PostgreSQL database: python manage.py loaddata db.json
verify your data is load go to django shell => python manage.py shell

